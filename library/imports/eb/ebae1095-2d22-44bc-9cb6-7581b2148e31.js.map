{"version":3,"sources":["../../../../../assets/TypeScript/System/assets/TypeScript/System/ScreenRect.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,kFAAkF;AAClF,yFAAyF;AACzF,mBAAmB;AACnB,4FAA4F;AAC5F,mGAAmG;AACnG,8BAA8B;AAC9B,4FAA4F;AAC5F,mGAAmG;;AAE7F,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAwC,8BAAY;IADpD;QAAA,qEAoBC;QAjBU,eAAS,GAAW,IAAI,CAAC;QAEzB,eAAS,GAAW,IAAI,CAAC;;IAepC,CAAC;mBAnBoB,UAAU;IAO3B,2BAAM,GAAN;QACI,YAAU,CAAC,GAAG,GAAG,IAAI,CAAC;QACtB,IAAI,MAAM,GAAc,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,aAAa,GAAG,EAAE,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;QACrD,IAAI,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;YACvC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAC5E;QACD,IAAI,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;YACvC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;YACxD,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;SACrC;IACL,CAAC;;IAZa,cAAG,GAAc,IAAI,CAAC;IAJpC;QADC,QAAQ;iDACuB;IAEhC;QADC,QAAQ;iDACuB;IAJf,UAAU;QAD9B,OAAO;OACa,UAAU,CAmB9B;IAAD,iBAAC;CAnBD,AAmBC,CAnBuC,EAAE,CAAC,SAAS,GAmBnD;kBAnBoB,UAAU","file":"","sourceRoot":"../../../../../assets/TypeScript/System","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ScreenRect extends cc.Component {\n    @property\n    public maxHeight: number = 1200;\n    @property\n    public minHeight: number = 1000;\n\n    public static Ins:ScreenRect = null;\n    onLoad() {\n        ScreenRect.Ins = this;\n        let widget: cc.Widget = this.node.getComponent(cc.Widget);\n        let winSizePixels = cc.director.getWinSizeInPixels();\n        if (winSizePixels.height > this.maxHeight) {\n            widget.top = widget.bottom = (winSizePixels.height - this.maxHeight) / 2;\n        }\n        if (winSizePixels.height < this.minHeight) {\n            this.node.scale = winSizePixels.height / this.minHeight;\n            this.node.height = this.minHeight;\n        }\n    }\n}\n"]}